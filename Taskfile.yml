version: '3'

includes:
  base:
    taskfile: ./compiler-base
    dir: ./compiler-base

  core:
    taskfile: ./compiler-core
    dir: ./compiler-core

  wasm:
    taskfile: ./compiler-wasm
    dir: ./compiler-wasm

  docs:
    taskfile: ./docs
    dir: ./docs

  client:
    taskfile: ./web-client
    aliases: [c]
    dir: ./web-client

  server:
    taskfile: ./server
    aliases: [s]
    dir: ./server

  themes:
    taskfile: ./web-themes
    aliases: [th]
    dir: ./web-themes

  docker:
    taskfile: ./docker
    dir: ./docker

tasks:
  install:
    desc: Install development dependencies and packages
    cmds:
    - rustup update
    - cargo install cargo-watch cargo-expand wasm-pack regen-lang
    - cargo install txtpp
    - cargo install magoo
    - magoo install
    - task: themes:install
    - task: docs:install
    - task: client:install

  check:
    desc: Check issues in all packages
    deps: [check:ts, check:rs]

  check:ts:
    cmds:
    - task: docs:check
    - task: client:check
    - task: themes:check

  fix:ts:
    cmds:
    - task: docs:fix
    - task: client:fix
    - task: themes:fix

  check:rs:
    deps: [base:grammar]
    vars:
      CLIPPY_FLAGS: -D warnings -D clippy::todo -A clippy::empty_docs
    cmds:
    - cargo clippy --package compiler-macros --all-targets -- {{.CLIPPY_FLAGS}}
    - cargo clippy --package compiler-base --features native --all-targets -- {{.CLIPPY_FLAGS}}
    - cargo clippy --package compiler-base --features wasm --all-targets -- {{.CLIPPY_FLAGS}}
    - cargo clippy --package compiler-core --features native --all-targets -- {{.CLIPPY_FLAGS}}
    - cargo clippy --package compiler-core --features wasm --all-targets -- {{.CLIPPY_FLAGS}}
    - cargo clippy --package compiler-wasm --all-targets -- {{.CLIPPY_FLAGS}}
    - cargo clippy --package celery --all-targets -- {{.CLIPPY_FLAGS}}
    - cargo fmt --check

  fix:rs:
    cmds:
    - cargo fmt --all

  build:
    desc: Build production assets
    deps:
    - docs:build
    - build:client
    - build:server

  build:server:
    deps:
    - base:grammar
    dir: ./server
    cmds:
    - cross build --bin celery --release --target x86_64-unknown-linux-musl

  build:client:
    deps:
    - themes:build
    - build:wasm
    cmds:
    - task: client:build

  build:wasm:
    dir: ./compiler-wasm/build
    deps:
    - base:grammar
    cmds:
    - cargo run --bin buildwasm --release

  env:server:
    desc: export the nvim lsp environment variables for server development. Run as `eval $(task env:server)`
    cmds:
    - echo "export LSP_RUST_ANALYZER_EXTRA_ARGS='--exclude compiler-wasm'"

